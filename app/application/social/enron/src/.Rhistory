plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
length(op)
length(V(net)[media=="Wall Street Journal"])
V(net)[media=="Wall Street Journal"]
mails.important.net %v% 'technical' <- op
mails.important.net <- network(mails.important, matrix.type ="edgelist", weighted = TRUE , directed=FALSE)
mails.important.net %v% 'technical' <- op
op
calc_cent[[2]]
library("animation")
net <- mails.important.g
l <- layout_with_lgl(net)
media <- "Wall Street Journal"
V(net)[media=="Wall Street Journal"]
length(op)
saveGIF({
step.1 <- V(net)[media=="Wall Street Journal"]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
step.1 <- V(net)[media=="Wall Street Journal"]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
source("script/setup.r")
saveGIF({
step.1 <- V(net)[media=="Wall Street Journal"]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
source("script/setup.r")
saveGIF({
step.1 <- V(net)[media=="Wall Street Journal"]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
mails.important.net <- network(mails.important, matrix.type ="edgelist", weighted = TRUE , directed=FALSE)
mails.important.net %v% 'tech' <- rnorm(958*1)
step.1
saveGIF({
step.1 <- V(net)[tech==tech]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
mails.important.net %v% 'tech' <- rnorm(958*1)
saveGIF({
step.1 <- V(net)[tech==tech]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
op <- rnorm(958*1)
saveGIF({
step.1 <- V(net)[op==op]
plot_aghiles(net, step.1)
step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
plot_aghiles(net, step.2)
step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
step.1 <- V(net)[op==op]
plot_aghiles(net, step.1, main = "A")
# step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
# plot_aghiles(net, step.2)
#
# step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
# plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
step.1 <- V(net)[op==op]
plot_aghiles(net, op, main = "A")
# step.2 <- unlist(neighborhood(net, 1, step.1, mode="out"))
# plot_aghiles(net, step.2)
#
# step.3 <- unlist(neighborhood(net, 2, step.1, mode="out"))
# plot_aghiles(net, step.3)
},
interval = .8, movie.name="network_animation.gif"
)
propag <- propagation(wgtmat, 0.8, op, 25)
propag <- propagation(wgtmat, 0.8, op, 25)
saveGIF({
dr1 <- ecdf(unlist(propag[1 ]))(unlist(propag[1 ]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr2 <- ecdf(unlist(propag[20]))(unlist(propag[20]))
plot_aghiles(mails.important.g, dr2, , "", "", "")
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
for (i in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)) {
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
}
},
interval = .8, movie.name="network_animation.gif"
)
for (i in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)) {
print(i)
# dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
# plot_aghiles(mails.important.g, dr1, , "", "", "")
}
saveGIF({
for (i in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)) {
print(i)
# dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
# plot_aghiles(mails.important.g, dr1, , "", "", "")
}
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
for (i in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)) {
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
}
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
for (i in c(1:20)) {
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
}
},
interval = .8, movie.name="network_animation.gif"
)
saveGIF({
for (i in c(1:2)) {
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
}
},
interval = .8
)
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[2]))(unlist(propag[2]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[20]))(unlist(propag[20]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[1]))(unlist(propag[1]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[2]))(unlist(propag[2]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[3]))(unlist(propag[3]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dr1 <- ecdf(unlist(propag[4]))(unlist(propag[4]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
i <- 5
png(c(i,".png"), width = 1888, height = 1391)
dr1 <- ecdf(unlist(propag[5]))(unlist(propag[5]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dev.off
dev.off()
for (i in c(1:2)) {
png(cbind(i,".png"), width = 1888, height = 1391)
dr1 <- ecdf(unlist(propag[5]))(unlist(propag[5]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
}
dev.off()
for (i in c(1:2)) {
png(cbind(i,".png"), width = 1888, height = 1391)
dr1 <- ecdf(unlist(propag[5]))(unlist(propag[5]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dev.off()
}
propag <- propagation(wgtmat, 0.8, op, 25)
for (i in c(1:20)) {
png(cbind(i,".png"), width = 1888, height = 1391)
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dev.off()
}
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
propag <- propagation(wgtmat, 0.8, op, 25)
for (i in c(1:2)) {
png(cbind(i,".png"), width = 1888, height = 1391)
dr1 <- ecdf(unlist(propag[i]))(unlist(propag[i]))
plot_aghiles(mails.important.g, dr1, , "", "", "")
dev.off()
}
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
source("script/setup.r")
plot_aghiles(mails.important.g, dr, , "", "", "")
source("script/setup.r")
plot_aghiles(mails.important.g, dr, , "", "", "")
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
ggplot(results.df, aes(x=`Time`, y=V2, colour=factor(V1))) + geom_line()+ geom_point() + ylab("Contagion process convergence") +labs(colour="Reputation level")
ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
source("script/setup.r")
source("script/setup.r")
library("CINNA")
library("igraph")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
source("script/setup.r")
##############################################################" Plot Community ##################################################
pdf("../bin/communities_graphxx.pdf")
layout(rbind(1:4, 5:8))
lapply(seq_along(communities), function(x) {
name <- paste(names(communities)[x], "\n", "Modularity:", round(modularity(communities[[x]]), 4))
par(mar=c(1,1,3,1))
plot_djoudi(mails.important.g, membership(communities[[x]]), main = name)
})
plot_djoudi(mails.important.g, membership(communities[[1]]), main = name)
communities <- list()
### cluster_edge_betweenness
ceb <- cluster_edge_betweenness(mails.important.g,weights = NULL)
communities$Edge_betweenness <- ceb
### cluster_fast_greedy
cfg <- cluster_fast_greedy(mails.important.g)
communities$Fast_greedy <- cfg
### cluster_leading_eigen
cle <- cluster_leading_eigen(mails.important.g)
communities$Leading_eigenvector <- cle
### cluster_spinglass
cs <- cluster_spinglass(mails.important.g, spins=10)
communities$Spinglass <- cs
### cluster_walktrap
cw <- cluster_walktrap(mails.important.g)
communities$Walktrap <- cw
### cluster_label_prop
clp <- cluster_label_prop(mails.important.g)
communities$Label_propagation <- clp
# cluster_louvain
cl <- cluster_louvain(mails.important.g)
communities$Louvain <- cl
membership <- lapply(lapply(communities, membership), as.numeric)
##############################################################" Plot Community ##################################################
pdf("../bin/communities_graphxx.pdf")
layout(rbind(1:4, 5:8))
lapply(seq_along(communities), function(x) {
name <- paste(names(communities)[x], "\n", "Modularity:", round(modularity(communities[[x]]), 4))
par(mar=c(1,1,3,1))
plot_djoudi(mails.important.g, membership(communities[[x]]), main = name)
})
dev.off()
install.packages("devtools") # run this to install the devtools package
install.packages("devtools")
devtools::install_github("carloscinelli/NetworkRiskMeasures", build_vignettes = TRUE)
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
sm <- sir(mails.important.g, beta=5, gamma=1)
plot(sm)
sm
sm[[2]]
head(sm)
sm
sm$1
sm[1]
sm[1]$NR
sm[[1]]$NR
sm[[1]]$NR[500]
sm[[1]]$NR[800]
sm[[1]]$NR[900]
sm[[1]]$NR[9000]
sm[[1]]$NR[1200]
sm[[1]]$NR[1700]
sm[[1]]$NR[1500]
sm[[1]]$NR[1400]
sm[[1]]$NR[1300]
sm[[1]]$NR[1300]
sm[[1]]$NR[1200]
sm[[1]]$NR[1100]
sm[[1]]$NR[1000]
sm[[1]]$NR[1000]
plot(sm)
V(mails.important.g)
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
V(mails.important.g)
diameter(mails.important.g)
edge_density(mails.important.g)
edge_density(mails.important.g)
modularity(mails.important.g)
wtc <- cluster_walktrap(mails.important.g)
modularity(wtc)
degree_distribution(mails.important.g)
degree(mails.important.g)
mean(degree(mails.important.g))
mean_distance(mails.important.g)
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
ggplot(results.df, aes(x=`Time`, y=V2, colour=factor(V1))) + geom_line()+ geom_point() + ylab("Mean distance") +labs(colour="Reputation level")
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
fr <- ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
fr
head(fr)
fr$data
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
f <- ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
View(f)
View(f[["data"]])
write.table(f$data, "dataytyt.csv", sep="\t", row.names=FALSE, col.names=FALSE)
ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold")
)
p
p <- ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
p <- ggplot(results2.df, aes(x=`Time`, y=p_cum1, colour=factor(V1))) + geom_line()+ geom_point() + ylab("CDF of infected users") +labs(colour="Reputation level")
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold")
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"),
axis.ticks.x = element_text(color="blue", size=14, face="bold"),
axis.ticks.y = element_text(color="#993333", size=14, face="bold")
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"),
axis.ticks.x = element_text(color="blue", size=14, face="bold"),
axis.ticks.y = element_text(color="#993333", size=14, face="bold")
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"),
axis.ticks.x = element_line(color="blue", size=14, face="bold"),
axis.ticks.y = element_line(color="#993333", size=14, face="bold")
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"),
axis.ticks.x = element_line(color="blue", size=14),
axis.ticks.y = element_line(color="#993333", size=14)
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold")
)
p + theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"))
p + theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"))
p + theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"))
p + theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"))
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"))
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain")
#      axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain")
)
p + theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold")
)
p
library("CINNA")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
library("ggplot2")
ggplot(results.df, aes(x=`Time`, y=V2, colour=factor(V1))) + geom_line()+ geom_point() + ylab("Mean distance") +labs(colour="Reputation level")
p <- ggplot(results.df, aes(x=`Time`, y=V2, colour=factor(V1))) + geom_line()+ geom_point() + ylab("Mean distance") +labs(colour="Reputation level")
View(p)
View(p)
View(p[["data"]])
save.image("~/Downloads/kk.RData")
write.csv(d$data, file = "MyData.csv")
write.csv(p$data, file = "MyData.csv")
library("CINNA")
library("igraph")
library("ggplot2")
library("igraph")
library("GGally", quietly = TRUE)
source("script/setup.r")
library("fitdistrplus")
library("mc2d")  ## needed for dtriang
library("formattable")
