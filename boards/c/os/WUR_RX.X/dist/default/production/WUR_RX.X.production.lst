

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 19 11:43:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12LF1552
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12LF1552 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  008C                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  011D                     	;# 
    85  011D                     	;# 
    86  018C                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  020C                     	;# 
    96  0211                     	;# 
    97  0211                     	;# 
    98  0212                     	;# 
    99  0212                     	;# 
   100  0213                     	;# 
   101  0213                     	;# 
   102  0214                     	;# 
   103  0214                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0216                     	;# 
   108  0216                     	;# 
   109  0217                     	;# 
   110  0217                     	;# 
   111  0391                     	;# 
   112  0392                     	;# 
   113  0393                     	;# 
   114  0FE4                     	;# 
   115  0FE5                     	;# 
   116  0FE6                     	;# 
   117  0FE7                     	;# 
   118  0FE8                     	;# 
   119  0FE9                     	;# 
   120  0FEA                     	;# 
   121  0FEB                     	;# 
   122  0FED                     	;# 
   123  0FEE                     	;# 
   124  0FEF                     	;# 
   125  0711                     	;# 
   126  0712                     	;# 
   127  0713                     	;# 
   128  0714                     	;# 
   129  0715                     	;# 
   130  0716                     	;# 
   131  0717                     	;# 
   132  0718                     	;# 
   133  0719                     	;# 
   134  071A                     	;# 
   135  071A                     	;# 
   136  071A                     	;# 
   137  071A                     	;# 
   138  071B                     	;# 
   139  071C                     	;# 
   140  071C                     	;# 
   141  071C                     	;# 
   142  071C                     	;# 
   143  071D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  008C                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  0116                     	;# 
   176  0117                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  018C                     	;# 
   180  0191                     	;# 
   181  0191                     	;# 
   182  0192                     	;# 
   183  0193                     	;# 
   184  0193                     	;# 
   185  0194                     	;# 
   186  0195                     	;# 
   187  0196                     	;# 
   188  020C                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0711                     	;# 
   219  0712                     	;# 
   220  0713                     	;# 
   221  0714                     	;# 
   222  0715                     	;# 
   223  0716                     	;# 
   224  0717                     	;# 
   225  0718                     	;# 
   226  0719                     	;# 
   227  071A                     	;# 
   228  071A                     	;# 
   229  071A                     	;# 
   230  071A                     	;# 
   231  071B                     	;# 
   232  071C                     	;# 
   233  071C                     	;# 
   234  071C                     	;# 
   235  071C                     	;# 
   236  071D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  008C                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  020C                     	;# 
   282  0211                     	;# 
   283  0211                     	;# 
   284  0212                     	;# 
   285  0212                     	;# 
   286  0213                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0214                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0216                     	;# 
   294  0216                     	;# 
   295  0217                     	;# 
   296  0217                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  0393                     	;# 
   300  0FE4                     	;# 
   301  0FE5                     	;# 
   302  0FE6                     	;# 
   303  0FE7                     	;# 
   304  0FE8                     	;# 
   305  0FE9                     	;# 
   306  0FEA                     	;# 
   307  0FEB                     	;# 
   308  0FED                     	;# 
   309  0FEE                     	;# 
   310  0FEF                     	;# 
   311  0711                     	;# 
   312  0712                     	;# 
   313  0713                     	;# 
   314  0714                     	;# 
   315  0715                     	;# 
   316  0716                     	;# 
   317  0717                     	;# 
   318  0718                     	;# 
   319  0719                     	;# 
   320  071A                     	;# 
   321  071A                     	;# 
   322  071A                     	;# 
   323  071A                     	;# 
   324  071B                     	;# 
   325  071C                     	;# 
   326  071C                     	;# 
   327  071C                     	;# 
   328  071C                     	;# 
   329  071D                     	;# 
   330  0015                     _TMR0	set	21
   331  0060                     _RA0	set	96
   332  005B                     _IOCIE	set	91
   333  005E                     _PEIE	set	94
   334  005F                     _GIE	set	95
   335  0064                     _RA4	set	100
   336  005D                     _TMR0IE	set	93
   337  005A                     _TMR0IF	set	90
   338  0099                     _OSCCONbits	set	153
   339  04AA                     _PS2	set	1194
   340  04A9                     _PS1	set	1193
   341  04A8                     _PS0	set	1192
   342  04AB                     _PSA	set	1195
   343  04AD                     _TMR0CS	set	1197
   344  0461                     _TRISA1	set	1121
   345  0460                     _TRISA0	set	1120
   346  0464                     _TRISA4	set	1124
   347  0465                     _TRISA5	set	1125
   348  04CF                     _SPLLEN	set	1231
   349  018C                     _ANSELA	set	396
   350  020C                     _WPUA	set	524
   351  1C99                     _IOCAF1	set	7321
   352  1C9D                     _IOCAF5	set	7325
   353  1C95                     _IOCAN5	set	7317
   354  1C8D                     _IOCAP5	set	7309
   355                           
   356                           ; #config settings
   357  0000                     
   358                           	psect	cinit
   359  0029                     start_initialization:	
   360  0029                     __initialization:	
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0029  01F7               	clrf	__pbssCOMMON& (0+127)
   364  002A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   365  002B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   366  002C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   367  002D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   368                           
   369                           ; Clear objects allocated to BANK0
   370  002E  3020               	movlw	low __pbssBANK0
   371  002F  0084               	movwf	4
   372  0030  3000               	movlw	high __pbssBANK0
   373  0031  0085               	movwf	5
   374  0032  3019               	movlw	25
   375  0033  20FE               	fcall	clear_ram0
   376  0034                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379  0034                     __end_of__initialization:	
   380  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   381  0035  0020               	movlb	0
   382  0036  2893               	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMMON
   385  0077                     __pbssCOMMON:	
   386  0077                     _rec_i:	
   387  0077                     	ds	2
   388  0079                     _State:	
   389  0079                     	ds	1
   390  007A                     _temp:	
   391  007A                     	ds	1
   392  007B                     _STEPCNT:	
   393  007B                     	ds	1
   394                           
   395                           	psect	bssBANK0
   396  0020                     __pbssBANK0:	
   397  0020                     _dataPacket:	
   398  0020                     	ds	10
   399  002A                     _rec_vect:	
   400  002A                     	ds	8
   401  0032                     _count:	
   402  0032                     	ds	2
   403  0034                     _out:	
   404  0034                     	ds	2
   405  0036                     _STEPCNT2:	
   406  0036                     	ds	1
   407  0037                     _bytenr:	
   408  0037                     	ds	1
   409  0038                     _bitnr:	
   410  0038                     	ds	1
   411                           
   412                           	psect	clrtext
   413  00FE                     clear_ram0:	
   414                           ;	Called with FSR0 containing the base address, and
   415                           ;	WREG with the size to clear
   416                           
   417  00FE  0064               	clrwdt	;clear the watchdog before getting into this loop
   418  00FF                     clrloop0:	
   419  00FF  0180               	clrf	0	;clear RAM location pointed to by FSR
   420  0100  3101               	addfsr 0,1
   421  0101  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   422  0102  28FF               	goto	clrloop0	;have we reached the end yet?
   423  0103  3400               	retlw	0	;all done for this memory range, return
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_tmr0_init:	
   428  0070                     ?_board_init:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_int0:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ??_int0:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0070                     	ds	2
   443  0072                     ??_tmr0_init:	
   444  0072                     ??_board_init:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0072                     ?_Receive_Packet:	
   448                           ; 1 bytes @ 0x2
   449                           
   450                           
   451                           ; 2 bytes @ 0x2
   452  0072                     	ds	2
   453  0074                     ??_Receive_Packet:	
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	2
   457  0076                     ??_main:	
   458                           
   459                           ; 1 bytes @ 0x6
   460  0076                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  0039                     __pcstackBANK0:	
   464  0039                     main@address_received:	
   465                           
   466                           ; 2 bytes @ 0x0
   467  0039                     	ds	2
   468                           
   469                           	psect	maintext
   470  0093                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 59 in file "paper.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  address_rece    2    0[BANK0 ] unsigned short 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : B1F/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   490 ;;      Params:         0       0       0       0
   491 ;;      Locals:         0       2       0       0
   492 ;;      Temps:          1       0       0       0
   493 ;;      Totals:         1       2       0       0
   494 ;;Total ram usage:        3 bytes
   495 ;; Hardware stack levels required when called:    3
   496 ;; This function calls:
   497 ;;		_Receive_Packet
   498 ;;		_board_init
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  0093                     _main:	
   507                           
   508                           ;paper.c: 60: board_init();
   509                           
   510                           ;incstack = 0
   511                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   512  0093  20DB               	fcall	_board_init
   513                           
   514                           ;paper.c: 61: unsigned short address_received;
   515                           ;paper.c: 62: TRISA0 = 0;
   516  0094  0021               	movlb	1	; select bank1
   517  0095  100C               	bcf	12,0	;volatile
   518                           
   519                           ;paper.c: 63: GIE = 1;
   520  0096  178B               	bsf	11,7	;volatile
   521                           
   522                           ;paper.c: 64: PEIE=1;
   523  0097  170B               	bsf	11,6	;volatile
   524                           
   525                           ;paper.c: 65: State=IDLE;
   526  0098  01F9               	clrf	_State
   527                           
   528                           ;paper.c: 66: IOCIE=1;
   529  0099  158B               	bsf	11,3	;volatile
   530                           
   531                           ;paper.c: 69: switch(State)
   532                           
   533                           ;paper.c: 68: while(1) {
   534  009A  28CF               	goto	l861
   535  009B                     l124:	
   536                           ;paper.c: 70: {
   537                           ;paper.c: 71: case IDLE:
   538                           
   539  009B  0063               	sleep	;# 
   540                           
   541                           ;paper.c: 73: break;
   542  009C  28CF               	goto	l861
   543  009D                     l833:	
   544                           ;paper.c: 74: case SEND:
   545                           
   546  009D  28CE               	goto	l857
   547  009E                     l835:	
   548                           ;paper.c: 79: case RECEIVE:
   549                           
   550                           ;paper.c: 78: break;
   551                           
   552                           ;paper.c: 77: State=IDLE;
   553                           
   554                           
   555                           ;paper.c: 80: address_received=Receive_Packet();
   556  009E  2037               	fcall	_Receive_Packet
   557  009F  0873               	movf	?_Receive_Packet+1,w
   558  00A0  0020               	movlb	0	; select bank0
   559  00A1  00BA               	movwf	main@address_received+1
   560  00A2  0872               	movf	?_Receive_Packet,w
   561  00A3  00B9               	movwf	main@address_received
   562                           
   563                           ;paper.c: 82: if (address_received == 0xA5){
   564  00A4  30A5               	movlw	165
   565  00A5  0639               	xorwf	main@address_received,w
   566  00A6  043A               	iorwf	main@address_received+1,w
   567  00A7  1D03               	btfss	3,2
   568  00A8  28B5               	goto	l845
   569                           
   570                           ;paper.c: 83: RA0 = 1;_delay((unsigned long)((10)*(2000000/4000.0)));RA0 = 0;
   571  00A9  140C               	bsf	12,0	;volatile
   572  00AA  3007               	movlw	7
   573  00AB  00F6               	movwf	??_main
   574  00AC  307D               	movlw	125
   575  00AD                     u397:	
   576  00AD  0B89               	decfsz	9,f
   577  00AE  28AD               	goto	u397
   578  00AF  0BF6               	decfsz	??_main,f
   579  00B0  28AD               	goto	u397
   580  00B1  0000               	nop
   581  00B2  0020               	movlb	0	; select bank0
   582  00B3  100C               	bcf	12,0	;volatile
   583                           
   584                           ;paper.c: 85: }
   585  00B4  28CF               	goto	l861
   586  00B5                     l845:	
   587                           
   588                           ;paper.c: 86: else if (address_received == 0x81) {
   589  00B5  3081               	movlw	129
   590  00B6  0639               	xorwf	main@address_received,w
   591  00B7  043A               	iorwf	main@address_received+1,w
   592  00B8  1D03               	btfss	3,2
   593  00B9  28CE               	goto	l857
   594                           
   595                           ;paper.c: 92: _delay((unsigned long)((3)*(2000000/4000.0)));
   596  00BA  30D6               	movlw	214
   597  00BB                     u407:	
   598  00BB  3200               	nop2
   599  00BC  3200               	nop2
   600  00BD  0B89               	decfsz	9,f
   601  00BE  28BB               	goto	u407
   602  00BF  3200               	nop2
   603                           
   604                           ;paper.c: 94: RA0 = 1;_delay((unsigned long)((10)*(2000000/4000.0)));RA0 = 0;
   605  00C0  0020               	movlb	0	; select bank0
   606  00C1  140C               	bsf	12,0	;volatile
   607  00C2  3007               	movlw	7
   608  00C3  00F6               	movwf	??_main
   609  00C4  307D               	movlw	125
   610  00C5                     u417:	
   611  00C5  0B89               	decfsz	9,f
   612  00C6  28C5               	goto	u417
   613  00C7  0BF6               	decfsz	??_main,f
   614  00C8  28C5               	goto	u417
   615  00C9  0000               	nop
   616  00CA  0020               	movlb	0	; select bank0
   617  00CB  100C               	bcf	12,0	;volatile
   618                           
   619                           ;paper.c: 95: STEPCNT2=0;
   620  00CC  01B6               	clrf	_STEPCNT2
   621                           
   622                           ;paper.c: 97: }
   623  00CD  28CF               	goto	l861
   624  00CE                     l857:	
   625                           ;paper.c: 102: default: State=IDLE; break;
   626                           
   627                           ;paper.c: 101: break;
   628                           
   629                           ;paper.c: 100: else State=IDLE;
   630                           
   631  00CE  01F9               	clrf	_State
   632  00CF                     l861:	
   633                           ;paper.c: 103: }
   634                           
   635  00CF  0879               	movf	_State,w
   636                           
   637                           ; Switch size 1, requested type "space"
   638                           ; Number of cases is 3, Range of values is 0 to 2
   639                           ; switch strategies available:
   640                           ; Name         Instructions Cycles
   641                           ; simple_byte           10     6 (average)
   642                           ; direct_byte           12     6 (fixed)
   643                           ; jumptable            260     6 (fixed)
   644                           ;	Chosen strategy is simple_byte
   645  00D0  3A00               	xorlw	0	; case 0
   646  00D1  1903               	skipnz
   647  00D2  289B               	goto	l124
   648  00D3  3A01               	xorlw	1	; case 1
   649  00D4  1903               	skipnz
   650  00D5  289D               	goto	l833
   651  00D6  3A03               	xorlw	3	; case 2
   652  00D7  1903               	skipnz
   653  00D8  289E               	goto	l835
   654  00D9  28CE               	goto	l857
   655  00DA  28CF               	goto	l861
   656  00DB                     __end_of_main:	
   657                           
   658                           	psect	text1
   659  00DB                     __ptext1:	
   660 ;; *************** function _board_init *****************
   661 ;; Defined at:
   662 ;;		line 5 in file "hardware_config.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   676 ;;      Params:         0       0       0       0
   677 ;;      Locals:         0       0       0       0
   678 ;;      Temps:          0       0       0       0
   679 ;;      Totals:         0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    2
   683 ;; This function calls:
   684 ;;		_tmr0_init
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _board_init
   692  00DB                     _board_init:	
   693                           
   694                           ;hardware_config.c: 7: SPLLEN = 0;
   695                           
   696                           ;incstack = 0
   697                           ; Regs used in _board_init: [wreg+status,2+status,0+pclath+cstack]
   698  00DB  0021               	movlb	1	; select bank1
   699  00DC  1399               	bcf	25,7	;volatile
   700                           
   701                           ;hardware_config.c: 8: OSCCONbits.IRCF = 0b1100;
   702  00DD  0819               	movf	25,w	;volatile
   703  00DE  3987               	andlw	-121
   704  00DF  3860               	iorlw	96
   705  00E0  0099               	movwf	25	;volatile
   706                           
   707                           ;hardware_config.c: 9: OSCCONbits.SCS = 0b00;
   708  00E1  30FC               	movlw	-4
   709  00E2  0599               	andwf	25,f	;volatile
   710                           
   711                           ;hardware_config.c: 10: _delay((unsigned long)((1)*(2000000/4000.0)));
   712  00E3  30A6               	movlw	166
   713  00E4                     u427:	
   714  00E4  0B89               	decfsz	9,f
   715  00E5  28E4               	goto	u427
   716  00E6  3200               	nop2
   717                           
   718                           ;hardware_config.c: 12: ANSELA = 0;
   719  00E7  0023               	movlb	3	; select bank3
   720  00E8  018C               	clrf	12	;volatile
   721                           
   722                           ;hardware_config.c: 13: WPUA = 0;
   723  00E9  0024               	movlb	4	; select bank4
   724  00EA  018C               	clrf	12	;volatile
   725                           
   726                           ;hardware_config.c: 14: TRISA5 = 1;
   727  00EB  0021               	movlb	1	; select bank1
   728  00EC  168C               	bsf	12,5	;volatile
   729                           
   730                           ;hardware_config.c: 15: TRISA4 = 1;
   731  00ED  160C               	bsf	12,4	;volatile
   732                           
   733                           ;hardware_config.c: 17: TRISA0 = 0;
   734  00EE  100C               	bcf	12,0	;volatile
   735                           
   736                           ;hardware_config.c: 18: TRISA1 = 1;
   737  00EF  148C               	bsf	12,1	;volatile
   738                           
   739                           ;hardware_config.c: 20: IOCAP5 = 1;
   740  00F0  0027               	movlb	7	; select bank7
   741  00F1  1691               	bsf	17,5	;volatile
   742                           
   743                           ;hardware_config.c: 21: IOCAN5 = 0;
   744  00F2  1292               	bcf	18,5	;volatile
   745                           
   746                           ;hardware_config.c: 22: tmr0_init();
   747  00F3  20F5               	fcall	_tmr0_init
   748  00F4  0008               	return
   749  00F5                     __end_of_board_init:	
   750                           
   751                           	psect	text2
   752  00F5                     __ptext2:	
   753 ;; *************** function _tmr0_init *****************
   754 ;; Defined at:
   755 ;;		line 25 in file "hardware_config.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		None
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   769 ;;      Params:         0       0       0       0
   770 ;;      Locals:         0       0       0       0
   771 ;;      Temps:          0       0       0       0
   772 ;;      Totals:         0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    1
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_board_init
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function _tmr0_init
   785  00F5                     _tmr0_init:	
   786                           
   787                           ;hardware_config.c: 26: TMR0CS = 0;
   788                           
   789                           ;incstack = 0
   790                           ; Regs used in _tmr0_init: []
   791  00F5  0021               	movlb	1	; select bank1
   792  00F6  1295               	bcf	21,5	;volatile
   793                           
   794                           ;hardware_config.c: 27: PSA = 0;
   795  00F7  1195               	bcf	21,3	;volatile
   796                           
   797                           ;hardware_config.c: 28: PS0 = 0;
   798  00F8  1015               	bcf	21,0	;volatile
   799                           
   800                           ;hardware_config.c: 29: PS1 = 0;
   801  00F9  1095               	bcf	21,1	;volatile
   802                           
   803                           ;hardware_config.c: 30: PS2 = 0;
   804  00FA  1115               	bcf	21,2	;volatile
   805                           
   806                           ;hardware_config.c: 32: TMR0IF = 0;
   807  00FB  110B               	bcf	11,2	;volatile
   808                           
   809                           ;hardware_config.c: 33: TMR0IE = 1;
   810  00FC  168B               	bsf	11,5	;volatile
   811  00FD  0008               	return
   812  00FE                     __end_of_tmr0_init:	
   813                           
   814                           	psect	text3
   815  0037                     __ptext3:	
   816 ;; *************** function _Receive_Packet *****************
   817 ;; Defined at:
   818 ;;		line 15 in file "receiver.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2    2[COMMON] unsigned short 
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         2       0       0       0
   833 ;;      Locals:         0       0       0       0
   834 ;;      Temps:          2       0       0       0
   835 ;;      Totals:         4       0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _Receive_Packet
   848  0037                     _Receive_Packet:	
   849  0037                     l63:	
   850                           ;receiver.c: 18: while(RA4==1);
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _Receive_Packet: [wreg+fsr1l+fsr1h+status,2+status,0]
   854                           
   855  0037  0020               	movlb	0	; select bank0
   856  0038  1A0C               	btfsc	12,4	;volatile
   857  0039  2837               	goto	l63
   858                           
   859                           ;receiver.c: 19: _delay((unsigned long)((200)*(2000000/4000000.0)));
   860  003A  3021               	movlw	33
   861  003B                     u437:	
   862  003B  0B89               	decfsz	9,f
   863  003C  283B               	goto	u437
   864  003D  0000               	nop
   865                           
   866                           ;receiver.c: 21: for(rec_i=1;rec_i<8;rec_i++)
   867  003E  3001               	movlw	1
   868  003F  00F7               	movwf	_rec_i
   869  0040  3000               	movlw	0
   870  0041  00F8               	movwf	_rec_i+1
   871  0042  0878               	movf	_rec_i+1,w
   872  0043  3A80               	xorlw	128
   873  0044  00F4               	movwf	??_Receive_Packet
   874  0045  3080               	movlw	128
   875  0046  0274               	subwf	??_Receive_Packet,w
   876  0047  3008               	movlw	8
   877  0048  1903               	btfsc	3,2
   878  0049  0277               	subwf	_rec_i,w
   879  004A  1803               	btfsc	3,0
   880  004B  286A               	goto	l67
   881  004C                     l789:	
   882                           
   883                           ;receiver.c: 22: {
   884                           ;receiver.c: 23: TMR0=32;
   885  004C  3020               	movlw	32
   886  004D  0020               	movlb	0	; select bank0
   887  004E  0095               	movwf	21	;volatile
   888                           
   889                           ;receiver.c: 24: STEPCNT=0;
   890  004F  01FB               	clrf	_STEPCNT
   891                           
   892                           ;receiver.c: 25: rec_vect[rec_i]=RA4;
   893  0050  0877               	movf	_rec_i,w
   894  0051  3E2A               	addlw	(low (_rec_vect| 0))& (0+255)
   895  0052  0086               	movwf	6
   896  0053  0187               	clrf	7
   897  0054  3000               	movlw	0
   898  0055  1A0C               	btfsc	12,4	;volatile
   899  0056  3001               	movlw	1
   900  0057  0081               	movwf	1
   901  0058                     l795:	
   902                           ;receiver.c: 27: while(!STEPCNT);
   903                           
   904  0058  087B               	movf	_STEPCNT,w
   905  0059  1903               	btfsc	3,2
   906  005A  2858               	goto	l795
   907                           
   908                           ;receiver.c: 28: STEPCNT=0;
   909  005B  01FB               	clrf	_STEPCNT
   910  005C  3001               	movlw	1
   911  005D  07F7               	addwf	_rec_i,f
   912  005E  3000               	movlw	0
   913  005F  3DF8               	addwfc	_rec_i+1,f
   914  0060  0878               	movf	_rec_i+1,w
   915  0061  3A80               	xorlw	128
   916  0062  00F4               	movwf	??_Receive_Packet
   917  0063  3080               	movlw	128
   918  0064  0274               	subwf	??_Receive_Packet,w
   919  0065  3008               	movlw	8
   920  0066  1903               	btfsc	3,2
   921  0067  0277               	subwf	_rec_i,w
   922  0068  1C03               	skipc
   923  0069  284C               	goto	l789
   924  006A                     l67:	
   925                           
   926                           ;receiver.c: 30: }
   927                           ;receiver.c: 31: rec_vect[0]=1;
   928  006A  0020               	movlb	0	; select bank0
   929  006B  01AA               	clrf	_rec_vect
   930  006C  0AAA               	incf	_rec_vect,f
   931                           
   932                           ;receiver.c: 32: out=0;
   933  006D  01B4               	clrf	_out
   934  006E  01B5               	clrf	_out+1
   935                           
   936                           ;receiver.c: 33: for(rec_i=7;rec_i>=0;rec_i--)
   937  006F  3007               	movlw	7
   938  0070  00F7               	movwf	_rec_i
   939  0071  3000               	movlw	0
   940  0072  00F8               	movwf	_rec_i+1
   941  0073  1BF8               	btfsc	_rec_i+1,7
   942  0074  288E               	goto	l817
   943  0075                     l811:	
   944                           
   945                           ;receiver.c: 34: out|=(rec_vect[7-rec_i])<<(rec_i);
   946  0075  0377               	decf	_rec_i,w
   947  0076  3AFF               	xorlw	255
   948  0077  3E07               	addlw	7
   949  0078  3E2A               	addlw	(low (_rec_vect| 0))& (0+255)
   950  0079  0086               	movwf	6
   951  007A  0187               	clrf	7
   952  007B  0801               	movf	1,w
   953  007C  00F4               	movwf	??_Receive_Packet
   954  007D  01F5               	clrf	??_Receive_Packet+1
   955  007E  0A77               	incf	_rec_i,w
   956  007F  2882               	goto	u354
   957  0080                     u355:	
   958  0080  35F4               	lslf	??_Receive_Packet,f
   959  0081  0DF5               	rlf	??_Receive_Packet+1,f
   960  0082                     u354:	
   961  0082  0B89               	decfsz	9,f
   962  0083  2880               	goto	u355
   963  0084  0874               	movf	??_Receive_Packet,w
   964  0085  04B4               	iorwf	_out,f
   965  0086  0875               	movf	??_Receive_Packet+1,w
   966  0087  04B5               	iorwf	_out+1,f
   967  0088  30FF               	movlw	255
   968  0089  07F7               	addwf	_rec_i,f
   969  008A  30FF               	movlw	255
   970  008B  3DF8               	addwfc	_rec_i+1,f
   971  008C  1FF8               	btfss	_rec_i+1,7
   972  008D  2875               	goto	l811
   973  008E                     l817:	
   974                           
   975                           ;receiver.c: 36: return out;
   976  008E  0835               	movf	_out+1,w
   977  008F  00F3               	movwf	?_Receive_Packet+1
   978  0090  0834               	movf	_out,w
   979  0091  00F2               	movwf	?_Receive_Packet
   980  0092  0008               	return
   981  0093                     __end_of_Receive_Packet:	
   982                           
   983                           	psect	intentry
   984  0004                     __pintentry:	
   985 ;; *************** function _int0 *****************
   986 ;; Defined at:
   987 ;;		line 37 in file "paper.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1001 ;;      Params:         0       0       0       0
  1002 ;;      Locals:         0       0       0       0
  1003 ;;      Temps:          2       0       0       0
  1004 ;;      Totals:         2       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		Interrupt level 1
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014  0004                     _int0:	
  1015                           
  1016                           ;incstack = 0
  1017  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1018                           
  1019                           ; Regs used in _int0: [wreg+status,2+status,0]
  1020  0005  3180               	pagesel	$
  1021  0006  0020               	movlb	0	; select bank0
  1022  0007  087F               	movf	127,w
  1023  0008  00F1               	movwf	??_int0+1
  1024                           
  1025                           ;paper.c: 39: if (( IOCAF5 ) && (State==IDLE)){
  1026  0009  0027               	movlb	7	; select bank7
  1027  000A  1E93               	btfss	19,5	;volatile
  1028  000B  2815               	goto	i1l112
  1029  000C  0879               	movf	_State,w
  1030  000D  1D03               	btfss	3,2
  1031  000E  2815               	goto	i1l112
  1032                           
  1033                           ;paper.c: 40: IOCAF5 = 0;
  1034  000F  1293               	bcf	19,5	;volatile
  1035                           
  1036                           ;paper.c: 41: State = RECEIVE;
  1037  0010  3002               	movlw	2
  1038  0011  00F0               	movwf	??_int0
  1039  0012  0870               	movf	??_int0,w
  1040  0013  00F9               	movwf	_State
  1041                           
  1042                           ;paper.c: 42: }
  1043  0014  281C               	goto	i1l709
  1044  0015                     i1l112:	
  1045                           
  1046                           ;paper.c: 43: else if (( IOCAF5 ) && (State!=IDLE)){
  1047  0015  1E93               	btfss	19,5	;volatile
  1048  0016  281C               	goto	i1l709
  1049  0017  0879               	movf	_State,w
  1050  0018  1903               	btfsc	3,2
  1051  0019  281C               	goto	i1l709
  1052                           
  1053                           ;paper.c: 44: IOCAF5 = 0;
  1054  001A  1293               	bcf	19,5	;volatile
  1055                           
  1056                           ;paper.c: 45: State = IDLE;
  1057  001B  01F9               	clrf	_State
  1058  001C                     i1l709:	
  1059                           
  1060                           ;paper.c: 46: }
  1061                           ;paper.c: 47: if ( TMR0IF ){
  1062  001C  1D0B               	btfss	11,2	;volatile
  1063  001D  2821               	goto	i1l115
  1064                           
  1065                           ;paper.c: 48: TMR0IF = 0;
  1066  001E  110B               	bcf	11,2	;volatile
  1067                           
  1068                           ;paper.c: 51: STEPCNT=1;
  1069  001F  01FB               	clrf	_STEPCNT
  1070  0020  0AFB               	incf	_STEPCNT,f
  1071  0021                     i1l115:	
  1072                           
  1073                           ;paper.c: 53: }
  1074                           ;paper.c: 54: if ( IOCAF1 ){
  1075  0021  1893               	btfsc	19,1	;volatile
  1076                           
  1077                           ;paper.c: 55: IOCAF1 = 0;
  1078  0022  1093               	bcf	19,1	;volatile
  1079  0023  0871               	movf	??_int0+1,w
  1080  0024  0020               	movlb	0	; select bank0
  1081  0025  00FF               	movwf	127
  1082  0026  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1083  0027  0009               	retfie
  1084  0028                     __end_of_int0:	
  1085  007E                     btemp	set	126	;btemp
  1086  007E                     int$flags	set	126
  1087  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      27
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Receive_Packet

Critical Paths under _int0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      65
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Receive_Packet
                         _board_init
 ---------------------------------------------------------------------------------
 (1) _board_init                                           0     0      0       0
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Receive_Packet                                       4     2      2       0
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int0                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Receive_Packet
   _board_init
     _tmr0_init

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      27      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 19 11:43:58 2018

            __CFG_CP$OFF 0000                       l63 0037                       l67 006A  
                    l124 009B                      l811 0075                      l817 008E  
                    l833 009D                      l835 009E                      l845 00B5  
                    l861 00CF                      l857 00CE                      l795 0058  
                    l789 004C                      _GIE 005F                      _RA0 0060  
                    _RA4 0064                      _PS0 04A8                      u407 00BB  
                    _PS1 04A9                      _PS2 04AA                      u417 00C5  
                    u354 0082                      u355 0080                      u427 00E4  
                    u437 003B                      u397 00AD                      _PSA 04AB  
                    _out 0034             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _PEIE 005E                     _TMR0 0015  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _int0 0004  
                   _main 0093                     _temp 007A                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0028                    ?_int0 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _IOCIE 005B                    i1l112 0015  
                  i1l115 0021                    i1l709 001C            __CFG_PWRTE$ON 0000  
                  _State 0079                    _bitnr 0038                    _count 0032  
                  _rec_i 0077           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0029  
           __end_of_int0 0028             __end_of_main 00DB                   ??_int0 0070  
                 ??_main 0076                   _ANSELA 018C                   _IOCAF1 1C99  
                 _IOCAF5 1C9D                   _IOCAN5 1C95                   _IOCAP5 1C8D  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR0CS 04AD  
                 _SPLLEN 04CF                   _TRISA0 0460                   _TRISA1 0461  
                 _TRISA4 0464                   _TRISA5 0465           __CFG_STVREN$ON 0000  
                 _bytenr 0037  __end_of__initialization 0034           __pcstackCOMMON 0070  
             _dataPacket 0020               __pbssBANK0 0020               __pmaintext 0093  
__size_of_Receive_Packet 005C               _board_init 00DB               __pintentry 0004  
     __size_of_tmr0_init 0009                  _STEPCNT 007B                  __ptext1 00DB  
                __ptext2 00F5                  __ptext3 0037                  clrloop0 00FF  
   end_of_initialization 0034        __end_of_tmr0_init 00FE              ?_board_init 0070  
       __CFG_FOSC$INTOSC 0000           _Receive_Packet 0037      start_initialization 0029  
    __size_of_board_init 001A   __end_of_Receive_Packet 0093              __pbssCOMMON 0077  
              ___latbits 0000            __pcstackBANK0 0039          ?_Receive_Packet 0072  
              clear_ram0 00FE                _tmr0_init 00F5             ??_board_init 0072  
               _STEPCNT2 0036       __end_of_board_init 00F5               ?_tmr0_init 0070  
          __size_of_int0 0024            __size_of_main 0048     main@address_received 0039  
               _rec_vect 002A                 int$flags 007E         ??_Receive_Packet 0074  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000              ??_tmr0_init 0072  
             _OSCCONbits 0099  
