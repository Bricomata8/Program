

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 11 18:57:19 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12LF1552
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12LF1552 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  008C                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  011D                     	;# 
    85  011D                     	;# 
    86  018C                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  020C                     	;# 
    96  0211                     	;# 
    97  0211                     	;# 
    98  0212                     	;# 
    99  0212                     	;# 
   100  0213                     	;# 
   101  0213                     	;# 
   102  0214                     	;# 
   103  0214                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0216                     	;# 
   108  0216                     	;# 
   109  0217                     	;# 
   110  0217                     	;# 
   111  0391                     	;# 
   112  0392                     	;# 
   113  0393                     	;# 
   114  0FE4                     	;# 
   115  0FE5                     	;# 
   116  0FE6                     	;# 
   117  0FE7                     	;# 
   118  0FE8                     	;# 
   119  0FE9                     	;# 
   120  0FEA                     	;# 
   121  0FEB                     	;# 
   122  0FED                     	;# 
   123  0FEE                     	;# 
   124  0FEF                     	;# 
   125  0711                     	;# 
   126  0712                     	;# 
   127  0713                     	;# 
   128  0714                     	;# 
   129  0715                     	;# 
   130  0716                     	;# 
   131  0717                     	;# 
   132  0718                     	;# 
   133  0719                     	;# 
   134  071A                     	;# 
   135  071A                     	;# 
   136  071A                     	;# 
   137  071A                     	;# 
   138  071B                     	;# 
   139  071C                     	;# 
   140  071C                     	;# 
   141  071C                     	;# 
   142  071C                     	;# 
   143  071D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  008C                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  0116                     	;# 
   176  0117                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  018C                     	;# 
   180  0191                     	;# 
   181  0191                     	;# 
   182  0192                     	;# 
   183  0193                     	;# 
   184  0193                     	;# 
   185  0194                     	;# 
   186  0195                     	;# 
   187  0196                     	;# 
   188  020C                     	;# 
   189  0211                     	;# 
   190  0211                     	;# 
   191  0212                     	;# 
   192  0212                     	;# 
   193  0213                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0711                     	;# 
   219  0712                     	;# 
   220  0713                     	;# 
   221  0714                     	;# 
   222  0715                     	;# 
   223  0716                     	;# 
   224  0717                     	;# 
   225  0718                     	;# 
   226  0719                     	;# 
   227  071A                     	;# 
   228  071A                     	;# 
   229  071A                     	;# 
   230  071A                     	;# 
   231  071B                     	;# 
   232  071C                     	;# 
   233  071C                     	;# 
   234  071C                     	;# 
   235  071C                     	;# 
   236  071D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0015                     	;# 
   253  008C                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  020C                     	;# 
   282  0211                     	;# 
   283  0211                     	;# 
   284  0212                     	;# 
   285  0212                     	;# 
   286  0213                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0214                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0216                     	;# 
   294  0216                     	;# 
   295  0217                     	;# 
   296  0217                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  0393                     	;# 
   300  0FE4                     	;# 
   301  0FE5                     	;# 
   302  0FE6                     	;# 
   303  0FE7                     	;# 
   304  0FE8                     	;# 
   305  0FE9                     	;# 
   306  0FEA                     	;# 
   307  0FEB                     	;# 
   308  0FED                     	;# 
   309  0FEE                     	;# 
   310  0FEF                     	;# 
   311  0711                     	;# 
   312  0712                     	;# 
   313  0713                     	;# 
   314  0714                     	;# 
   315  0715                     	;# 
   316  0716                     	;# 
   317  0717                     	;# 
   318  0718                     	;# 
   319  0719                     	;# 
   320  071A                     	;# 
   321  071A                     	;# 
   322  071A                     	;# 
   323  071A                     	;# 
   324  071B                     	;# 
   325  071C                     	;# 
   326  071C                     	;# 
   327  071C                     	;# 
   328  071C                     	;# 
   329  071D                     	;# 
   330  0015                     _TMR0	set	21
   331  0060                     _RA0	set	96
   332  005B                     _IOCIE	set	91
   333  005E                     _PEIE	set	94
   334  005F                     _GIE	set	95
   335  0064                     _RA4	set	100
   336  005D                     _TMR0IE	set	93
   337  005A                     _TMR0IF	set	90
   338  0099                     _OSCCONbits	set	153
   339  04AA                     _PS2	set	1194
   340  04A9                     _PS1	set	1193
   341  04A8                     _PS0	set	1192
   342  04AB                     _PSA	set	1195
   343  04AD                     _TMR0CS	set	1197
   344  0461                     _TRISA1	set	1121
   345  0460                     _TRISA0	set	1120
   346  0464                     _TRISA4	set	1124
   347  0465                     _TRISA5	set	1125
   348  04CF                     _SPLLEN	set	1231
   349  018C                     _ANSELA	set	396
   350  020C                     _WPUA	set	524
   351  1C99                     _IOCAF1	set	7321
   352  1C9D                     _IOCAF5	set	7325
   353  1C95                     _IOCAN5	set	7317
   354  1C8D                     _IOCAP5	set	7309
   355                           
   356                           ; #config settings
   357  0000                     
   358                           	psect	cinit
   359  0029                     start_initialization:	
   360  0029                     __initialization:	
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0029  01F7               	clrf	__pbssCOMMON& (0+127)
   364  002A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   365  002B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   366  002C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   367  002D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   368                           
   369                           ; Clear objects allocated to BANK0
   370  002E  3020               	movlw	low __pbssBANK0
   371  002F  0084               	movwf	4
   372  0030  3000               	movlw	high __pbssBANK0
   373  0031  0085               	movwf	5
   374  0032  3020               	movlw	32
   375  0033  20F2               	fcall	clear_ram0
   376  0034                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379  0034                     __end_of__initialization:	
   380  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   381  0035  0020               	movlb	0
   382  0036  2895               	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMMON
   385  0077                     __pbssCOMMON:	
   386  0077                     _rec_i:	
   387  0077                     	ds	2
   388  0079                     _State:	
   389  0079                     	ds	1
   390  007A                     _temp:	
   391  007A                     	ds	1
   392  007B                     _STEPCNT:	
   393  007B                     	ds	1
   394                           
   395                           	psect	bssBANK0
   396  0020                     __pbssBANK0:	
   397  0020                     _rec_vect:	
   398  0020                     	ds	16
   399  0030                     _dataPacket:	
   400  0030                     	ds	10
   401  003A                     _count:	
   402  003A                     	ds	2
   403  003C                     _out:	
   404  003C                     	ds	2
   405  003E                     _bytenr:	
   406  003E                     	ds	1
   407  003F                     _bitnr:	
   408  003F                     	ds	1
   409                           
   410                           	psect	clrtext
   411  00F2                     clear_ram0:	
   412                           ;	Called with FSR0 containing the base address, and
   413                           ;	WREG with the size to clear
   414                           
   415  00F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   416  00F3                     clrloop0:	
   417  00F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   418  00F4  3101               	addfsr 0,1
   419  00F5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   420  00F6  28F3               	goto	clrloop0	;have we reached the end yet?
   421  00F7  3400               	retlw	0	;all done for this memory range, return
   422                           
   423                           	psect	cstackCOMMON
   424  0070                     __pcstackCOMMON:	
   425  0070                     ?_tmr0_init:	
   426  0070                     ?_board_init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_int0:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_int0:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	2
   441  0072                     ??_tmr0_init:	
   442  0072                     ??_board_init:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ?_Receive_Packet:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 2 bytes @ 0x2
   450  0072                     	ds	2
   451  0074                     ??_Receive_Packet:	
   452                           
   453                           ; 1 bytes @ 0x4
   454  0074                     	ds	2
   455  0076                     ??_main:	
   456                           
   457                           ; 1 bytes @ 0x6
   458  0076                     	ds	1
   459                           
   460                           	psect	cstackBANK0
   461  0040                     __pcstackBANK0:	
   462  0040                     main@address_received:	
   463                           
   464                           ; 2 bytes @ 0x0
   465  0040                     	ds	2
   466                           
   467                           	psect	maintext
   468  0095                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 52 in file "opwum_main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  address_rece    2    0[BANK0 ] unsigned short 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B1F/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   488 ;;      Params:         0       0       0       0
   489 ;;      Locals:         0       2       0       0
   490 ;;      Temps:          1       0       0       0
   491 ;;      Totals:         1       2       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_Receive_Packet
   496 ;;		_board_init
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _main
   504  0095                     _main:	
   505                           
   506                           ;opwum_main.c: 53: board_init();
   507                           
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   510  0095  20CF               	fcall	_board_init
   511                           
   512                           ;opwum_main.c: 54: unsigned short address_received;
   513                           ;opwum_main.c: 55: TRISA0 = 0;
   514  0096  0021               	movlb	1	; select bank1
   515  0097  100C               	bcf	12,0	;volatile
   516                           
   517                           ;opwum_main.c: 56: GIE = 1;
   518  0098  178B               	bsf	11,7	;volatile
   519                           
   520                           ;opwum_main.c: 57: PEIE=1;
   521  0099  170B               	bsf	11,6	;volatile
   522                           
   523                           ;opwum_main.c: 58: State=IDLE;
   524  009A  01F9               	clrf	_State
   525                           
   526                           ;opwum_main.c: 59: IOCIE=1;
   527  009B  158B               	bsf	11,3	;volatile
   528                           
   529                           ;opwum_main.c: 62: switch(State)
   530                           
   531                           ;opwum_main.c: 61: while(1) {
   532  009C  28C3               	goto	l818
   533  009D                     l124:	
   534                           ;opwum_main.c: 63: {
   535                           ;opwum_main.c: 64: case IDLE:
   536                           
   537  009D  0063               	sleep	;# 
   538                           
   539                           ;opwum_main.c: 66: break;
   540  009E  28C3               	goto	l818
   541  009F                     l796:	
   542                           ;opwum_main.c: 67: case SEND:
   543                           
   544  009F  28C2               	goto	l814
   545  00A0                     l798:	
   546                           ;opwum_main.c: 70: case RECEIVE:
   547                           
   548                           ;opwum_main.c: 69: break;
   549                           
   550                           ;opwum_main.c: 68: State=IDLE;
   551                           
   552                           
   553                           ;opwum_main.c: 71: address_received=Receive_Packet();
   554  00A0  2037               	fcall	_Receive_Packet
   555  00A1  0873               	movf	?_Receive_Packet+1,w
   556  00A2  0020               	movlb	0	; select bank0
   557  00A3  00C1               	movwf	main@address_received+1
   558  00A4  0872               	movf	?_Receive_Packet,w
   559  00A5  00C0               	movwf	main@address_received
   560                           
   561                           ;opwum_main.c: 73: TMR0=8;
   562  00A6  3008               	movlw	8
   563  00A7  0095               	movwf	21	;volatile
   564                           
   565                           ;opwum_main.c: 74: if ((address_received == 0xA501) || (address_received == 0xA500) ){
   566  00A8  0340               	decf	main@address_received,w
   567  00A9  30A5               	movlw	165
   568  00AA  1903               	skipnz
   569  00AB  0641               	xorwf	main@address_received+1,w
   570  00AC  1903               	btfsc	3,2
   571  00AD  28B3               	goto	l130
   572  00AE  30A5               	movlw	165
   573  00AF  0641               	xorwf	main@address_received+1,w
   574  00B0  0440               	iorwf	main@address_received,w
   575  00B1  1D03               	btfss	3,2
   576  00B2  28C2               	goto	l814
   577  00B3                     l130:	
   578                           
   579                           ;opwum_main.c: 78: if ( TMR0IF ){
   580  00B3  1D0B               	btfss	11,2	;volatile
   581  00B4  28C3               	goto	l818
   582                           
   583                           ;opwum_main.c: 79: TMR0IF = 0;
   584  00B5  110B               	bcf	11,2	;volatile
   585                           
   586                           ;opwum_main.c: 80: RA0 = 1;_delay((unsigned long)((10)*(2000000/4000.0)));RA0 = 0; }
   587  00B6  140C               	bsf	12,0	;volatile
   588  00B7  3007               	movlw	7
   589  00B8  00F6               	movwf	??_main
   590  00B9  307D               	movlw	125
   591  00BA                     u427:	
   592  00BA  0B89               	decfsz	9,f
   593  00BB  28BA               	goto	u427
   594  00BC  0BF6               	decfsz	??_main,f
   595  00BD  28BA               	goto	u427
   596  00BE  0000               	nop
   597  00BF  0020               	movlb	0	; select bank0
   598  00C0  100C               	bcf	12,0	;volatile
   599                           
   600                           ;opwum_main.c: 82: }
   601  00C1  28C3               	goto	l818
   602  00C2                     l814:	
   603                           ;opwum_main.c: 85: default: State=IDLE; break;
   604                           
   605                           ;opwum_main.c: 84: break;
   606                           
   607                           ;opwum_main.c: 83: else State=IDLE;
   608                           
   609  00C2  01F9               	clrf	_State
   610  00C3                     l818:	
   611                           ;opwum_main.c: 86: }
   612                           
   613  00C3  0879               	movf	_State,w
   614                           
   615                           ; Switch size 1, requested type "space"
   616                           ; Number of cases is 3, Range of values is 0 to 2
   617                           ; switch strategies available:
   618                           ; Name         Instructions Cycles
   619                           ; simple_byte           10     6 (average)
   620                           ; direct_byte           12     6 (fixed)
   621                           ; jumptable            260     6 (fixed)
   622                           ;	Chosen strategy is simple_byte
   623  00C4  3A00               	xorlw	0	; case 0
   624  00C5  1903               	skipnz
   625  00C6  289D               	goto	l124
   626  00C7  3A01               	xorlw	1	; case 1
   627  00C8  1903               	skipnz
   628  00C9  289F               	goto	l796
   629  00CA  3A03               	xorlw	3	; case 2
   630  00CB  1903               	skipnz
   631  00CC  28A0               	goto	l798
   632  00CD  28C2               	goto	l814
   633  00CE  28C3               	goto	l818
   634  00CF                     __end_of_main:	
   635                           
   636                           	psect	text1
   637  00CF                     __ptext1:	
   638 ;; *************** function _board_init *****************
   639 ;; Defined at:
   640 ;;		line 5 in file "hardware_config.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   654 ;;      Params:         0       0       0       0
   655 ;;      Locals:         0       0       0       0
   656 ;;      Temps:          0       0       0       0
   657 ;;      Totals:         0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		_tmr0_init
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _board_init
   670  00CF                     _board_init:	
   671                           
   672                           ;hardware_config.c: 7: SPLLEN = 0;
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _board_init: [wreg+status,2+status,0+pclath+cstack]
   676  00CF  0021               	movlb	1	; select bank1
   677  00D0  1399               	bcf	25,7	;volatile
   678                           
   679                           ;hardware_config.c: 8: OSCCONbits.IRCF = 0b1100;
   680  00D1  0819               	movf	25,w	;volatile
   681  00D2  3987               	andlw	-121
   682  00D3  3860               	iorlw	96
   683  00D4  0099               	movwf	25	;volatile
   684                           
   685                           ;hardware_config.c: 9: OSCCONbits.SCS = 0b00;
   686  00D5  30FC               	movlw	-4
   687  00D6  0599               	andwf	25,f	;volatile
   688                           
   689                           ;hardware_config.c: 10: _delay((unsigned long)((1)*(2000000/4000.0)));
   690  00D7  30A6               	movlw	166
   691  00D8                     u437:	
   692  00D8  0B89               	decfsz	9,f
   693  00D9  28D8               	goto	u437
   694  00DA  3200               	nop2
   695                           
   696                           ;hardware_config.c: 12: ANSELA = 0;
   697  00DB  0023               	movlb	3	; select bank3
   698  00DC  018C               	clrf	12	;volatile
   699                           
   700                           ;hardware_config.c: 13: WPUA = 0;
   701  00DD  0024               	movlb	4	; select bank4
   702  00DE  018C               	clrf	12	;volatile
   703                           
   704                           ;hardware_config.c: 14: TRISA5 = 1;
   705  00DF  0021               	movlb	1	; select bank1
   706  00E0  168C               	bsf	12,5	;volatile
   707                           
   708                           ;hardware_config.c: 15: TRISA4 = 1;
   709  00E1  160C               	bsf	12,4	;volatile
   710                           
   711                           ;hardware_config.c: 17: TRISA0 = 0;
   712  00E2  100C               	bcf	12,0	;volatile
   713                           
   714                           ;hardware_config.c: 18: TRISA1 = 1;
   715  00E3  148C               	bsf	12,1	;volatile
   716                           
   717                           ;hardware_config.c: 20: IOCAP5 = 1;
   718  00E4  0027               	movlb	7	; select bank7
   719  00E5  1691               	bsf	17,5	;volatile
   720                           
   721                           ;hardware_config.c: 21: IOCAN5 = 0;
   722  00E6  1292               	bcf	18,5	;volatile
   723                           
   724                           ;hardware_config.c: 22: tmr0_init();
   725  00E7  20E9               	fcall	_tmr0_init
   726  00E8  0008               	return
   727  00E9                     __end_of_board_init:	
   728                           
   729                           	psect	text2
   730  00E9                     __ptext2:	
   731 ;; *************** function _tmr0_init *****************
   732 ;; Defined at:
   733 ;;		line 25 in file "hardware_config.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		None
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   747 ;;      Params:         0       0       0       0
   748 ;;      Locals:         0       0       0       0
   749 ;;      Temps:          0       0       0       0
   750 ;;      Totals:         0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_board_init
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _tmr0_init
   763  00E9                     _tmr0_init:	
   764                           
   765                           ;hardware_config.c: 26: TMR0CS = 0;
   766                           
   767                           ;incstack = 0
   768                           ; Regs used in _tmr0_init: []
   769  00E9  0021               	movlb	1	; select bank1
   770  00EA  1295               	bcf	21,5	;volatile
   771                           
   772                           ;hardware_config.c: 27: PSA = 0;
   773  00EB  1195               	bcf	21,3	;volatile
   774                           
   775                           ;hardware_config.c: 28: PS0 = 0;
   776  00EC  1015               	bcf	21,0	;volatile
   777                           
   778                           ;hardware_config.c: 29: PS1 = 0;
   779  00ED  1095               	bcf	21,1	;volatile
   780                           
   781                           ;hardware_config.c: 30: PS2 = 0;
   782  00EE  1115               	bcf	21,2	;volatile
   783                           
   784                           ;hardware_config.c: 32: TMR0IF = 0;
   785  00EF  110B               	bcf	11,2	;volatile
   786                           
   787                           ;hardware_config.c: 33: TMR0IE = 1;
   788  00F0  168B               	bsf	11,5	;volatile
   789  00F1  0008               	return
   790  00F2                     __end_of_tmr0_init:	
   791                           
   792                           	psect	text3
   793  0037                     __ptext3:	
   794 ;; *************** function _Receive_Packet *****************
   795 ;; Defined at:
   796 ;;		line 15 in file "receiver.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2    2[COMMON] unsigned short 
   803 ;; Registers used:
   804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   810 ;;      Params:         2       0       0       0
   811 ;;      Locals:         0       0       0       0
   812 ;;      Temps:          2       0       0       0
   813 ;;      Totals:         4       0       0       0
   814 ;;Total ram usage:        4 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _Receive_Packet
   826  0037                     _Receive_Packet:	
   827  0037                     l63:	
   828                           ;receiver.c: 18: while(RA4==1);
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _Receive_Packet: [wreg+fsr1l+fsr1h+status,2+status,0]
   832                           
   833  0037  0020               	movlb	0	; select bank0
   834  0038  1A0C               	btfsc	12,4	;volatile
   835  0039  2837               	goto	l63
   836                           
   837                           ;receiver.c: 19: _delay((unsigned long)((200)*(2000000/4000000.0)));
   838  003A  3021               	movlw	33
   839  003B                     u447:	
   840  003B  0B89               	decfsz	9,f
   841  003C  283B               	goto	u447
   842  003D  0000               	nop
   843                           
   844                           ;receiver.c: 21: for(rec_i=1;rec_i<16;rec_i++)
   845  003E  3001               	movlw	1
   846  003F  00F7               	movwf	_rec_i
   847  0040  3000               	movlw	0
   848  0041  00F8               	movwf	_rec_i+1
   849  0042  0878               	movf	_rec_i+1,w
   850  0043  3A80               	xorlw	128
   851  0044  00F4               	movwf	??_Receive_Packet
   852  0045  3080               	movlw	128
   853  0046  0274               	subwf	??_Receive_Packet,w
   854  0047  1D03               	skipz
   855  0048  284B               	goto	u335
   856  0049  3010               	movlw	16
   857  004A  0277               	subwf	_rec_i,w
   858  004B                     u335:	
   859  004B  1803               	btfsc	3,0
   860  004C  286C               	goto	l67
   861  004D                     l752:	
   862                           
   863                           ;receiver.c: 22: {
   864                           ;receiver.c: 23: TMR0=32;
   865  004D  3020               	movlw	32
   866  004E  0020               	movlb	0	; select bank0
   867  004F  0095               	movwf	21	;volatile
   868                           
   869                           ;receiver.c: 24: STEPCNT=0;
   870  0050  01FB               	clrf	_STEPCNT
   871                           
   872                           ;receiver.c: 25: rec_vect[rec_i]=RA4;
   873  0051  0877               	movf	_rec_i,w
   874  0052  3E20               	addlw	(low (_rec_vect| 0))& (0+255)
   875  0053  0086               	movwf	6
   876  0054  0187               	clrf	7
   877  0055  3000               	movlw	0
   878  0056  1A0C               	btfsc	12,4	;volatile
   879  0057  3001               	movlw	1
   880  0058  0081               	movwf	1
   881  0059                     l758:	
   882                           ;receiver.c: 26: while(!STEPCNT);
   883                           
   884  0059  087B               	movf	_STEPCNT,w
   885  005A  1903               	btfsc	3,2
   886  005B  2859               	goto	l758
   887                           
   888                           ;receiver.c: 27: STEPCNT=0;
   889  005C  01FB               	clrf	_STEPCNT
   890  005D  3001               	movlw	1
   891  005E  07F7               	addwf	_rec_i,f
   892  005F  3000               	movlw	0
   893  0060  3DF8               	addwfc	_rec_i+1,f
   894  0061  0878               	movf	_rec_i+1,w
   895  0062  3A80               	xorlw	128
   896  0063  00F4               	movwf	??_Receive_Packet
   897  0064  3080               	movlw	128
   898  0065  0274               	subwf	??_Receive_Packet,w
   899  0066  1D03               	skipz
   900  0067  286A               	goto	u355
   901  0068  3010               	movlw	16
   902  0069  0277               	subwf	_rec_i,w
   903  006A                     u355:	
   904  006A  1C03               	skipc
   905  006B  284D               	goto	l752
   906  006C                     l67:	
   907                           
   908                           ;receiver.c: 29: }
   909                           ;receiver.c: 30: rec_vect[0]=1;
   910  006C  0020               	movlb	0	; select bank0
   911  006D  01A0               	clrf	_rec_vect
   912  006E  0AA0               	incf	_rec_vect,f
   913                           
   914                           ;receiver.c: 31: out=0;
   915  006F  01BC               	clrf	_out
   916  0070  01BD               	clrf	_out+1
   917                           
   918                           ;receiver.c: 32: for(rec_i=15;rec_i>=0;rec_i--)
   919  0071  300F               	movlw	15
   920  0072  00F7               	movwf	_rec_i
   921  0073  3000               	movlw	0
   922  0074  00F8               	movwf	_rec_i+1
   923  0075  1BF8               	btfsc	_rec_i+1,7
   924  0076  2890               	goto	l780
   925  0077                     l774:	
   926                           
   927                           ;receiver.c: 33: out|=(rec_vect[15-rec_i])<<(rec_i);
   928  0077  0377               	decf	_rec_i,w
   929  0078  3AFF               	xorlw	255
   930  0079  3E0F               	addlw	15
   931  007A  3E20               	addlw	(low (_rec_vect| 0))& (0+255)
   932  007B  0086               	movwf	6
   933  007C  0187               	clrf	7
   934  007D  0801               	movf	1,w
   935  007E  00F4               	movwf	??_Receive_Packet
   936  007F  01F5               	clrf	??_Receive_Packet+1
   937  0080  0A77               	incf	_rec_i,w
   938  0081  2884               	goto	u374
   939  0082                     u375:	
   940  0082  35F4               	lslf	??_Receive_Packet,f
   941  0083  0DF5               	rlf	??_Receive_Packet+1,f
   942  0084                     u374:	
   943  0084  0B89               	decfsz	9,f
   944  0085  2882               	goto	u375
   945  0086  0874               	movf	??_Receive_Packet,w
   946  0087  04BC               	iorwf	_out,f
   947  0088  0875               	movf	??_Receive_Packet+1,w
   948  0089  04BD               	iorwf	_out+1,f
   949  008A  30FF               	movlw	255
   950  008B  07F7               	addwf	_rec_i,f
   951  008C  30FF               	movlw	255
   952  008D  3DF8               	addwfc	_rec_i+1,f
   953  008E  1FF8               	btfss	_rec_i+1,7
   954  008F  2877               	goto	l774
   955  0090                     l780:	
   956                           
   957                           ;receiver.c: 34: return out;
   958  0090  083D               	movf	_out+1,w
   959  0091  00F3               	movwf	?_Receive_Packet+1
   960  0092  083C               	movf	_out,w
   961  0093  00F2               	movwf	?_Receive_Packet
   962  0094  0008               	return
   963  0095                     __end_of_Receive_Packet:	
   964                           
   965                           	psect	intentry
   966  0004                     __pintentry:	
   967 ;; *************** function _int0 *****************
   968 ;; Defined at:
   969 ;;		line 33 in file "opwum_main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   983 ;;      Params:         0       0       0       0
   984 ;;      Locals:         0       0       0       0
   985 ;;      Temps:          2       0       0       0
   986 ;;      Totals:         2       0       0       0
   987 ;;Total ram usage:        2 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		Interrupt level 1
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996  0004                     _int0:	
   997                           
   998                           ;incstack = 0
   999  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1000                           
  1001                           ; Regs used in _int0: [wreg+status,2+status,0]
  1002  0005  3180               	pagesel	$
  1003  0006  0020               	movlb	0	; select bank0
  1004  0007  087F               	movf	127,w
  1005  0008  00F1               	movwf	??_int0+1
  1006                           
  1007                           ;opwum_main.c: 35: if (( IOCAF5 ) && (State==IDLE)){
  1008  0009  0027               	movlb	7	; select bank7
  1009  000A  1E93               	btfss	19,5	;volatile
  1010  000B  2815               	goto	i1l112
  1011  000C  0879               	movf	_State,w
  1012  000D  1D03               	btfss	3,2
  1013  000E  2815               	goto	i1l112
  1014                           
  1015                           ;opwum_main.c: 36: IOCAF5 = 0;
  1016  000F  1293               	bcf	19,5	;volatile
  1017                           
  1018                           ;opwum_main.c: 37: State = RECEIVE;
  1019  0010  3002               	movlw	2
  1020  0011  00F0               	movwf	??_int0
  1021  0012  0870               	movf	??_int0,w
  1022  0013  00F9               	movwf	_State
  1023                           
  1024                           ;opwum_main.c: 38: }
  1025  0014  281C               	goto	i1l678
  1026  0015                     i1l112:	
  1027                           
  1028                           ;opwum_main.c: 39: else if (( IOCAF5 ) && (State!=IDLE)){
  1029  0015  1E93               	btfss	19,5	;volatile
  1030  0016  281C               	goto	i1l678
  1031  0017  0879               	movf	_State,w
  1032  0018  1903               	btfsc	3,2
  1033  0019  281C               	goto	i1l678
  1034                           
  1035                           ;opwum_main.c: 40: IOCAF5 = 0;
  1036  001A  1293               	bcf	19,5	;volatile
  1037                           
  1038                           ;opwum_main.c: 41: State = IDLE;
  1039  001B  01F9               	clrf	_State
  1040  001C                     i1l678:	
  1041                           
  1042                           ;opwum_main.c: 42: }
  1043                           ;opwum_main.c: 43: if ( TMR0IF ){
  1044  001C  1D0B               	btfss	11,2	;volatile
  1045  001D  2821               	goto	i1l115
  1046                           
  1047                           ;opwum_main.c: 44: TMR0IF = 0;
  1048  001E  110B               	bcf	11,2	;volatile
  1049                           
  1050                           ;opwum_main.c: 45: STEPCNT=1;
  1051  001F  01FB               	clrf	_STEPCNT
  1052  0020  0AFB               	incf	_STEPCNT,f
  1053  0021                     i1l115:	
  1054                           
  1055                           ;opwum_main.c: 46: }
  1056                           ;opwum_main.c: 47: if ( IOCAF1 ){
  1057  0021  1893               	btfsc	19,1	;volatile
  1058                           
  1059                           ;opwum_main.c: 48: IOCAF1 = 0;
  1060  0022  1093               	bcf	19,1	;volatile
  1061  0023  0871               	movf	??_int0+1,w
  1062  0024  0020               	movlb	0	; select bank0
  1063  0025  00FF               	movwf	127
  1064  0026  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1065  0027  0009               	retfie
  1066  0028                     __end_of_int0:	
  1067  007E                     btemp	set	126	;btemp
  1068  007E                     int$flags	set	126
  1069  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      34
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Receive_Packet

Critical Paths under _int0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      65
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _Receive_Packet
                         _board_init
 ---------------------------------------------------------------------------------
 (1) _board_init                                           0     0      0       0
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Receive_Packet                                       4     2      2       0
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int0                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Receive_Packet
   _board_init
     _tmr0_init

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      22       6       42.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 11 18:57:19 2018

            __CFG_CP$OFF 0000                       l63 0037                       l67 006C  
                    l130 00B3                      l124 009D                      l814 00C2  
                    l752 004D                      l818 00C3                      l780 0090  
                    l774 0077                      l758 0059                      l796 009F  
                    l798 00A0                      _GIE 005F                      _RA0 0060  
                    _RA4 0064                      _PS0 04A8                      u335 004B  
                    _PS1 04A9                      _PS2 04AA                      u355 006A  
                    u427 00BA                      u437 00D8                      u374 0084  
                    u375 0082                      u447 003B                      _PSA 04AB  
                    _out 003C             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _PEIE 005E                     _TMR0 0015  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _int0 0004  
                   _main 0095                     _temp 007A                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0028                    ?_int0 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _IOCIE 005B                    i1l112 0015  
                  i1l115 0021                    i1l678 001C            __CFG_PWRTE$ON 0000  
                  _State 0079                    _bitnr 003F                    _count 003A  
                  _rec_i 0077           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0029  
           __end_of_int0 0028             __end_of_main 00CF                   ??_int0 0070  
                 ??_main 0076                   _ANSELA 018C                   _IOCAF1 1C99  
                 _IOCAF5 1C9D                   _IOCAN5 1C95                   _IOCAP5 1C8D  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR0CS 04AD  
                 _SPLLEN 04CF                   _TRISA0 0460                   _TRISA1 0461  
                 _TRISA4 0464                   _TRISA5 0465           __CFG_STVREN$ON 0000  
                 _bytenr 003E  __end_of__initialization 0034           __pcstackCOMMON 0070  
             _dataPacket 0030               __pbssBANK0 0020               __pmaintext 0095  
__size_of_Receive_Packet 005E               _board_init 00CF               __pintentry 0004  
     __size_of_tmr0_init 0009                  _STEPCNT 007B                  __ptext1 00CF  
                __ptext2 00E9                  __ptext3 0037                  clrloop0 00F3  
   end_of_initialization 0034        __end_of_tmr0_init 00F2              ?_board_init 0070  
       __CFG_FOSC$INTOSC 0000           _Receive_Packet 0037      start_initialization 0029  
    __size_of_board_init 001A   __end_of_Receive_Packet 0095              __pbssCOMMON 0077  
              ___latbits 0000            __pcstackBANK0 0040          ?_Receive_Packet 0072  
              clear_ram0 00F2                _tmr0_init 00E9             ??_board_init 0072  
     __end_of_board_init 00E9               ?_tmr0_init 0070            __size_of_int0 0024  
          __size_of_main 003A     main@address_received 0040                 _rec_vect 0020  
               int$flags 007E         ??_Receive_Packet 0074                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000              ??_tmr0_init 0072               _OSCCONbits 0099  
